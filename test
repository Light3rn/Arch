## Ask for parameters and define partitions
read -p 'Username: ' wantedname
read -p 'Give me installation device letter (ex. just a from /dev/sda): ' diskletter
diskpart="/dev/sd$diskletter"
read -p 'Using UEFI? (1, 0): ' uefi
read -p 'Gnome or Enlightenment? (1 Gnome, 2 Enlightenment): ' wm
read -p 'Password: ' password
if (( $uefi == 1)); then
efipart="${diskpart}1"
linuxpart="${diskpart}2"
else
linuxpart="${diskpart}1"
fi

## Verbose
set -x

## Format and mount partitions
umount $linuxpart
mkfs.ext4 -F $linuxpart
mount $linuxpart /mnt
if (( $uefi == 1)); then
umount $efipart
mkfs.fat -F32 $efipart
mkdir -p /mnt/boot
mount $efipart /mnt/boot
fi

## Install base
pacstrap /mnt base base-devel

## Add mount points to fstab
genfstab -U /mnt >> /mnt/etc/fstab
if (( $uefi == 1)); then
genfstab -U /mnt/boot >> /mnt/etc/fstab
fi

## Change time to local time and sync clock
arch-chroot /mnt ln -sf /usr/share/zoneinfo/Europe/Helsinki /etc/localtime
arch-chroot /mnt hwclock --systohc

## Add english and finnish to locale and generate languages for future use
echo $'en_US.UTF-8 UTF-8\nfi_FI.UTF-8 UTF-8' >> /mnt/etc/locale.gen
arch-chroot /mnt locale-gen

## Add user to wheel group and sudoers (also install sudo)
arch-chroot /mnt useradd -m -G wheel -s /bin/bash $wantedname
arch-chroot /mnt pacman --noconfirm -S sudo
echo $wantedname" ALL=(ALL) ALL" >> /mnt/etc/sudoers

# Putting in password already for later use
arch-chroot /mnt echo -e "${password}\n${password}\n" | passwd
arch-chroot /mnt echo -e "${password}\n${password}\n" | passwd $wantedname

## Install systemd startup or bootloader
if (( $uefi == 1)); then
## Use the next 3 lines instead if the 4 default lines don't work and comment them out
## arch-chroot /mnt pacman --noconfirm -S grub
## arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub
## arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg 
arch-chroot /mnt bootctl --path=/boot install
#arch-chroot /mnt bootctl install
rm /mnt/boot/loader/loader.conf
echo $'default  arch\ntimeout  0' >> /mnt/boot/loader/loader.conf
partuuid=$(blkid | grep $linuxpart | sed 's/.*PARTUUID="//g' | sed 's/\"//g')
echo $'title    Arch Linux\nlinux    /vmlinuz-linux\ninitrd   /initramfs-linux.img\noptions  root=PARTUUID='${partuuid}' rw' >> /mnt/boot/loader/entries/arch.conf

## Add secure boot
## added base-devel to pacstrap, put user add before secure boot installation for makepkg, put user password adding earlier
arch-chroot /mnt 
pacman --noconfirm -S efibootmgr git 
mv /boot/EFI/systemd/systemd-bootx64.efi /boot/EFI/systemd/loader.efi
sudo -u $wantedname mkdir -p /home/${wantedname}/builds
#cd /home/${wantedname}/builds
#sudo -u $wantedname git clone https://aur.archlinux.org/preloader-signed.git
#cd preloader-signed
#sudo -u $wantedname makepkg -cis
#cp /usr/share/preloader-signed/{PreLoader,HashTool}.efi /boot/EFI/systemd
#efibootmgr --disk $diskpart --part 1 --create --label "PreLoader" --loader /EFI/systemd/PreLoader.efi
###efibootmgr -c -l /EFI/systemd/HashTool.efi -L HashTool
###efibootmgr -c -l /EFI/systemd/PreLoader.efi -L PreLoader
##exiting arch-chroot




exit
else
arch-chroot /mnt pacman --noconfirm -S grub
arch-chroot /mnt grub-install $diskpart
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg 
fi

## Disable verbosing and ask for password for root and the user
set +x
